package br.jdbc;

import java.io.IOException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.Part;

import br.jdbc.dao.*;
import br.jdbc.dto.*;
/**
 * Servlet implementation class ProdutoServlet
 */
@WebServlet("/ProdutoServlet")
public class ProdutoServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
  
	private produtoDAO produtoDAO = new produtoDAO(null);	
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ProdutoServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String nomeProduto = request.getParameter("nomeProduto");
		Integer volume = (Integer.parseInt(request.getParameter("volume")));
		String preco = request.getParameter("preco");
		String tipoProduto = request.getParameter("tipoProduto");
		
		produtoDTO produtoDTO = new produtoDTO();
		
		produtoDTO.setNomeProduto(nomeProduto);
		produtoDTO.setVolume(volume);
		produtoDTO.setPreco(preco);
		produtoDTO.setTipoProduto(tipoProduto);
		
		produtoDAO.inserir(produtoDTO);
		
		
	}
	

@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 2, // 2MB
	                 maxFileSize = 1024 * 1024 * 10,      // 10MB
	                 maxRequestSize = 1024 * 1024 * 50)   // 50MB
	public class ProdutoServlet extends HttpServlet {
	    private static final String UPLOAD_DIRECTORY = "uploads"; // Diretório para salvar as imagens

	    // ...

	    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	        // ...

	        // Obtém o arquivo enviado pelo usuário
	        Part filePart = request.getPart("imagem");
	        
	        // Extrai o nome do arquivo
	        String fileName = extractFileName(filePart);
	        
	        // Gera um nome único para evitar conflitos de nome
	        String uniqueFileName = generateUniqueFileName(fileName);
	        
	        // Salva o arquivo no diretório de uploads
	        String filePath = saveFileToDirectory(filePart, uniqueFileName);
	        
	        // Armazena o caminho do arquivo no objeto produtoDTO
	        produtoDTO.setImagemPath(filePath);
	        
	        // Insere o objeto produtoDTO no banco de dados
	        produtoDAO.inserir(produtoDTO);

	        // ...
	    }

	    private String extractFileName(Part part) {
	        String contentDisposition = part.getHeader("content-disposition");
	        String[] parts = contentDisposition.split(";");

	        for (String partInfo : parts) {
	            if (partInfo.trim().startsWith("filename")) {
	                return partInfo.substring(partInfo.indexOf('=') + 1).trim().replace("\"", "");
	            }
	        }

	        return null;
	    }

	    private String generateUniqueFileName(String fileName) {
	        String extension = fileName.substring(fileName.lastIndexOf('.'));
	        String uniqueFileName = UUID.randomUUID().toString() + extension;
	        return uniqueFileName;
	    }

	    private String saveFileToDirectory(Part part, String fileName) throws IOException {
	        String uploadPath = getServletContext().getRealPath("") + File.separator + UPLOAD_DIRECTORY;
	        File uploadDir = new File(uploadPath);
	        if (!uploadDir.exists()) {
	            uploadDir.mkdir();
	        }

	        String filePath = uploadPath + File.separator + fileName;
	        part.write(filePath);
	        
	        return filePath;
	    }

	    // ...
	}

	    
	}